{
    "Phlow Basic Flow": {
        "prefix": "phlow-basic",
        "body": [
            "main: ${1:cli}",
            "name: ${2:My Flow}",
            "version: ${3:1.0.0}",
            "description: ${4:Flow description}",
            "author: ${5:Your Name}",
            "modules:",
            "  - module: ${1:cli}",
            "    version: latest",
            "    with:",
            "      additional_args: false",
            "      args:",
            "        - name: ${6:input}",
            "          description: ${7:Input parameter}",
            "          index: 1",
            "          type: string",
            "          required: true",
            "steps:",
            "  - payload:",
            "      message: !phs main.${6:input}",
            "  - return: !phs `Hello, \\${payload.message}!`"
        ],
        "description": "Basic Phlow flow structure"
    },
    "Phlow Simple Flow": {
        "prefix": "phlow-simple",
        "body": [
            "name: ${1:Simple Flow}",
            "version: ${2:1.0.0}",
            "description: ${3:Simple flow description}",
            "steps:",
            "  - payload: \"${4:Hello, World!}\"",
            "  - payload: !phs `Result: \\${payload}`"
        ],
        "description": "Simple Phlow flow without modules"
    },
    "Phlow CLI Module": {
        "prefix": "phlow-cli-module",
        "body": [
            "- module: cli",
            "  version: latest",
            "  with:",
            "    additional_args: false",
            "    args:",
            "      - name: ${1:parameter_name}",
            "        description: ${2:Parameter description}",
            "        index: ${3:1}",
            "        type: ${4|string,number,boolean|}",
            "        required: ${5|true,false|}"
        ],
        "description": "CLI module configuration"
    },
    "Phlow Step with Assert": {
        "prefix": "phlow-step-assert",
        "body": [
            "- assert: !phs ${1:condition}",
            "  then:",
            "    return: !phs `${2:Success message}`",
            "  else:",
            "    return: !phs `${3:Failure message}`"
        ],
        "description": "Step with assertion and conditional logic"
    },
    "Phlow Step with Module Use": {
        "prefix": "phlow-step-use",
        "body": [
            "- use: ${1:module_name}",
            "  input:",
            "    ${2:parameter}: ${3:value}"
        ],
        "description": "Step using a module"
    },
    "Phlow Log Module": {
        "prefix": "phlow-log-module",
        "body": [
            "- module: log",
            "  version: latest"
        ],
        "description": "Log module configuration"
    },
    "Phlow PostgreSQL Module": {
        "prefix": "phlow-postgres-module",
        "body": [
            "- module: postgres",
            "  version: latest",
            "  with:",
            "    host: !phs envs.POSTGRES_HOST ?? 'localhost'",
            "    user: !phs envs.POSTGRES_USER ?? 'postgres'",
            "    password: !phs envs.POSTGRES_PASSWORD",
            "    database: ${1:database_name}"
        ],
        "description": "PostgreSQL module configuration"
    },
    "Phlow HTTP Server Module": {
        "prefix": "phlow-http-module",
        "body": [
            "- module: http_server",
            "  version: latest",
            "  with:",
            "    port: ${1:8080}",
            "    host: ${2:localhost}"
        ],
        "description": "HTTP server module configuration"
    },
    "Phlow PHS Script": {
        "prefix": "phs",
        "body": [
            "!phs ${1:expression}"
        ],
        "description": "Phlow Script (PHS) directive"
    },
    "Phlow Include": {
        "prefix": "include",
        "body": [
            "!include ${1:file.yaml}"
        ],
        "description": "Include directive"
    },
    "Phlow Import": {
        "prefix": "import",
        "body": [
            "!import ${1:script.phs}"
        ],
        "description": "Import directive"
    },
    "Phlow Payload Step": {
        "prefix": "phlow-payload",
        "body": [
            "- payload:",
            "    ${1:key}: ${2:value}"
        ],
        "description": "Step with payload"
    },
    "Phlow Return Step": {
        "prefix": "phlow-return",
        "body": [
            "- return: !phs `${1:return_message}`"
        ],
        "description": "Return step"
    },
    "Phlow Conditional Steps": {
        "prefix": "phlow-conditional",
        "body": [
            "- assert: !phs ${1:condition}",
            "  then:",
            "    steps:",
            "      - ${2:step_content}",
            "  else:",
            "    steps:",
            "      - ${3:alternative_step}"
        ],
        "description": "Conditional steps with nested logic"
    }
}